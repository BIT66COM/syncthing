// protoc --proto_path=../../../../../:../../../../gogo/protobuf/protobuf:. --gogofast_out=. message.proto

syntax = "proto3";

package protocol;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.goproto_getters_all) = false;
option (gogoproto.sizer_all) = false;
option (gogoproto.protosizer_all) = true;
option (gogoproto.goproto_enum_stringer_all) = true;
option (gogoproto.goproto_enum_prefix_all) = false;

message HelloMessage {
    string device_name    = 1;
    string client_name    = 2;
    string client_version = 3;
}

message IndexMessage {
    string            folder  = 1;
    repeated FileInfo files   = 2 [(gogoproto.nullable) = false];
    uint32            flags   = 3;
    repeated Option   options = 4 [(gogoproto.nullable) = false];
}

message FileInfo {
    option (gogoproto.goproto_stringer) = false;
    string       name           = 1;
    FileInfoType type           = 2;
    int64        size           = 3;
    uint32       permissions    = 4;
    int64        modified       = 5;
    bool         deleted        = 6;
    bool         invalid        = 7;
    bool         no_permissions = 8;
    Vector       version        = 9 [(gogoproto.nullable) = false];
    int64        local_version  = 10;

    repeated BlockInfo Blocks = 16 [(gogoproto.nullable) = false];
}

enum FileInfoType {
    FILE              = 0 [(gogoproto.enumvalue_customname) = "FileInfoTypeFile"];
    DIRECTORY         = 1 [(gogoproto.enumvalue_customname) = "FileInfoTypeDirectory"];
    SYMLINK_FILE      = 2 [(gogoproto.enumvalue_customname) = "FileInfoTypeSymlinkFile"];
    SYMLINK_DIRECOTRY = 3 [(gogoproto.enumvalue_customname) = "FileInfoTypeSymlinkDirectory"];
    SYMLINK_UNKNOWN   = 4 [(gogoproto.enumvalue_customname) = "FileInfoTypeSymlinkUnknown"];
}

// Must be the same as FileInfo but without the blocks field
message FileInfoTruncated {
    option (gogoproto.goproto_stringer) = false;
    string       name           = 1;
    FileInfoType type           = 2;
    int64        size           = 3;
    uint32       permissions    = 4;
    int64        modified       = 5;
    bool         deleted        = 6;
    bool         invalid        = 7;
    bool         no_permissions = 8;
    Vector       version        = 9 [(gogoproto.nullable) = false];
    int64        local_version  = 10;
}

message BlockInfo {
    option (gogoproto.goproto_stringer) = false;
    int64 offset = 1;
    int32 size   = 2;
    bytes hash   = 3;
}

message Option {
    string key   = 1;
    string value = 2;
}

message RequestMessage {
    string folder         = 1;
    string name           = 2;
    int64  offset         = 3;
    int32  size           = 4;
    bytes  hash           = 5;
    bool   from_temporary = 6;
}

message ResponseMessage {
    bytes data = 1;
    int32 code = 2;
}

message ClusterConfigMessage {
    repeated Folder folders = 1 [(gogoproto.nullable) = false];
    repeated Option options = 2 [(gogoproto.nullable) = false];
}

message DownloadProgressMessage {
    string                              folder  = 1;
    repeated FileDownloadProgressUpdate updates = 2 [(gogoproto.nullable) = false];
    uint32                              flags   = 3;
    repeated Option                     options = 4 [(gogoproto.nullable) = false];
}

message Folder {
    string          id      = 1 [(gogoproto.customname) = "ID"];
    string          label   = 2;
    repeated Device devices = 3 [(gogoproto.nullable) = false];
    uint32          flags   = 4;
    repeated Option options = 5 [(gogoproto.nullable) = false];
}

message Device {
    bytes           id                = 1 [(gogoproto.customname) = "ID"];
    string          name              = 2;
    repeated string addresses         = 3;
    uint32          compression       = 4;
    string          cert_name         = 5;
    int64           max_local_version = 6;
    uint32          flags             = 7;
    repeated Option options           = 8 [(gogoproto.nullable) = false];
}

message FileDownloadProgressUpdate {
    uint32         update_type   = 1;
    string         name          = 2;
    Vector         version       = 3 [(gogoproto.nullable) = false];
    repeated int32 block_indexes = 4;
}

message CloseMessage {
    string reason = 1;
    int32  code   = 2;
}

message EmptyMessage {
}

message Vector {
    repeated Counter counters = 1 [(gogoproto.nullable) = false];
}

message Counter {
    uint64 id    = 1 [(gogoproto.customname) = "ID"];
    uint64 value = 2;
}
